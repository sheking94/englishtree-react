[{"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\index.js":"1","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\App.js":"2","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\reportWebVitals.js":"3","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\theme\\theme.js":"4","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\components\\Header\\Header.jsx":"5","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\routes\\routes.js":"6","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\components\\Header\\subcomponents\\SideMenu\\SideMenu.jsx":"7","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\pages\\TeacherPanel\\TeacherPanel.jsx":"8","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\pages\\StudentPanel\\StudentPanel.jsx":"9","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\pages\\LandingPage\\LandingPage.jsx":"10","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\pages\\TeacherPanel\\JumbleWord\\JumbleWord.jsx":"11","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\components\\Header\\subcomponents\\SideMenu\\menuItems.js":"12","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\components\\Header\\subcomponents\\SideMenu\\subcomponents\\ExpandedList\\ExpandedList.jsx":"13","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\pages\\ErrorPage\\ErrorPage.jsx":"14","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\components\\MainContent\\MainContent.js":"15","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\logic\\arrayLogic.js":"16","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\logic\\wordLogic.js":"17","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\pages\\TeacherPanel\\JumbleWord\\subcomponents\\CategorySelect\\CategorySelect.jsx":"18"},{"size":712,"mtime":1612541320544,"results":"19","hashOfConfig":"20"},{"size":410,"mtime":1612542721180,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1612541320551,"results":"22","hashOfConfig":"20"},{"size":533,"mtime":1612541320553,"results":"23","hashOfConfig":"20"},{"size":1961,"mtime":1612542741939,"results":"24","hashOfConfig":"20"},{"size":899,"mtime":1612541320551,"results":"25","hashOfConfig":"20"},{"size":3419,"mtime":1612541320541,"results":"26","hashOfConfig":"20"},{"size":433,"mtime":1612541320550,"results":"27","hashOfConfig":"20"},{"size":453,"mtime":1612541320549,"results":"28","hashOfConfig":"20"},{"size":389,"mtime":1612541320549,"results":"29","hashOfConfig":"20"},{"size":10225,"mtime":1612721843970,"results":"30","hashOfConfig":"20"},{"size":509,"mtime":1612541320542,"results":"31","hashOfConfig":"20"},{"size":534,"mtime":1612541320542,"results":"32","hashOfConfig":"20"},{"size":399,"mtime":1612541320548,"results":"33","hashOfConfig":"20"},{"size":376,"mtime":1612542770200,"results":"34","hashOfConfig":"20"},{"size":517,"mtime":1612541320545,"results":"35","hashOfConfig":"20"},{"size":1178,"mtime":1612632366066,"results":"36","hashOfConfig":"20"},{"size":934,"mtime":1612887697650,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ao2cc4",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\index.js",[],["76","77"],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\App.js",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\reportWebVitals.js",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\theme\\theme.js",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\routes\\routes.js",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\components\\Header\\subcomponents\\SideMenu\\SideMenu.jsx",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\pages\\TeacherPanel\\TeacherPanel.jsx",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\pages\\StudentPanel\\StudentPanel.jsx",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\pages\\LandingPage\\LandingPage.jsx",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\pages\\TeacherPanel\\JumbleWord\\JumbleWord.jsx",["78","79","80","81"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport {\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nimport { shuffleArray } from '../../../logic/arrayLogic';\r\nimport { normalizeWord, wordIsCorrect } from '../../../logic/wordLogic';\r\n\r\nimport CategorySelect from './subcomponents/CategorySelect/CategorySelect';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: theme.spacing(4),\r\n  },\r\n  titleDivider: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    backgroundColor: '#f5f5f5',\r\n    border: '1px solid #eee',\r\n    padding: theme.spacing(2),\r\n    flexDirection: 'column',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      '&:not(:last-child)': {\r\n        marginBottom: theme.spacing(2),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst shuffleWord = (word) => {\r\n  // create an array from the word\r\n  const wordToArray = word.split('');\r\n  let shuffledWord = shuffleArray(wordToArray).join('');\r\n\r\n  // if shuffledWord is the same as word,\r\n  // shuffle again (cannot become an infinite loop\r\n  // because of wordIsCorrect function)\r\n  while (shuffledWord === word) shuffledWord = shuffleArray(wordToArray).join('');\r\n\r\n  return shuffledWord;\r\n};\r\n\r\nconst JumbleWord = () => {\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [addedWord, setAddedWord] = useState('');\r\n  const [addedCategory, setAddedCategory] = useState('');\r\n  const [categories, setCategories] = useState([]);\r\n  const [words, setWords] = useState([]);\r\n  const [excercise, setExcercise] = useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleChangeCategory = (event) => {\r\n    setSelectedCategory(event.target.value);\r\n  };\r\n\r\n  const resetData = () => {\r\n    // load data from API\r\n    const loadedCategories = ['sport', 'family', 'animals', 'food'];\r\n    const loadedWords = [\r\n      'football',\r\n      'tennis',\r\n      'cricket',\r\n      'swimming',\r\n      'mother',\r\n      'father',\r\n      'son',\r\n      'daughter',\r\n      'hamburger',\r\n      'pizza',\r\n      'sandwich',\r\n    ];\r\n\r\n    // load categories and words\r\n    setCategories(loadedCategories);\r\n    setWords(loadedWords);\r\n\r\n    // reset excercise\r\n    setExcercise([]);\r\n    // create an excercise array from categories\r\n    categories.forEach((category) => {\r\n      setExcercise((prev) => [...prev, { category, words: [] }]);\r\n    });\r\n  };\r\n\r\n  const handleAddCategory = () => {\r\n    const category = normalizeWord(addedCategory);\r\n\r\n    // -- Check if the input category string is correct\r\n    if (!wordIsCorrect(category)) {\r\n      // this.danger('Enter a correct category!');\r\n      return;\r\n    }\r\n\r\n    // -- Check if the input category already exists\r\n    if (categories.includes(category)) {\r\n      // this.danger('Entered category already exists!');\r\n      return;\r\n    }\r\n\r\n    // -- Push to categories array...\r\n    setCategories((prev) => [...prev, category]);\r\n\r\n    // -- ...and create an object in the excercise array\r\n    setExcercise((prev) => [...prev, { category, words: [] }]);\r\n\r\n    // -- Clear input field\r\n    setAddedCategory('');\r\n\r\n    // -- Set selectedCategory\r\n    setSelectedCategory(category);\r\n  };\r\n\r\n  const handleAddWord = () => {\r\n    // -- Normalize word\r\n    const word = normalizeWord(addedWord);\r\n\r\n    // -- Check if the input word string is correct\r\n    if (!wordIsCorrect(word)) {\r\n      // this.danger('Enter a correct word!');\r\n      return;\r\n    }\r\n\r\n    // -- Check if a category is selected\r\n    if (selectedCategory === '') {\r\n      // this.danger('Choose a category!');\r\n      return;\r\n    }\r\n\r\n    // -- Add to words\r\n    if (!words.includes(word)) setWords((prev) => [...prev, word]);\r\n\r\n    // -- Push words to the excercise array\r\n    setExcercise((prev) =>\r\n      [...prev].map((object) => {\r\n        if (object.category === selectedCategory) {\r\n          if (object.words.includes(word)) {\r\n            // error snackbar: word already exists in category\r\n            return object;\r\n          }\r\n          return {\r\n            category: object.category,\r\n            words: [\r\n              ...object.words,\r\n              {\r\n                word: word,\r\n                shuffled: shuffleWord(word),\r\n              },\r\n            ],\r\n          };\r\n        }\r\n        return object;\r\n      })\r\n    );\r\n\r\n    // -- Clear input field\r\n    setAddedWord('');\r\n    // setSelectedCategory(''); // -- Category stays\r\n  };\r\n\r\n  const handleAddExcercise = () => {\r\n    // -- Push categories, words and excercise object to DB\r\n    // -- Add unique ID to an excercise\r\n    // ----------------------------------------------------\r\n    // -- If success -> remount component\r\n    resetData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    resetData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Helmet>\r\n        <title>ENGLISHTREE - Random word</title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Typography component=\"h2\" variant=\"h4\">\r\n          Random letters in a word\r\n        </Typography>\r\n        <Typography component=\"p\" gutterBottom variant=\"subtitle2\">\r\n          Select or add a category and enter a word which will be shuffled and added\r\n          to the excercise.\r\n        </Typography>\r\n      </Container>\r\n\r\n      <Divider className={classes.titleDivider} />\r\n\r\n      <Grid container spacing={2}>\r\n        {/* ADDING DATA */}\r\n        <Grid component=\"section\" item xs={4}>\r\n          <Paper className={classes.paper}>\r\n            <CategorySelect\r\n              handleChange={handleChangeCategory}\r\n              items={categories}\r\n              label=\"Select category...\"\r\n              labelId=\"category\"\r\n              value={selectedCategory}\r\n            />\r\n            <CategorySelect\r\n              handleChange={handleChangeCategory}\r\n              items={categories}\r\n              label=\"Select category...\"\r\n              labelId=\"category\"\r\n              value={selectedCategory}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* SHOWING DATA */}\r\n        <Grid component=\"section\" item xs={8}>\r\n          <Paper className={classes.paper}>\r\n            <span>Jumble word show excercise</span>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellat\r\n              expedita quia iusto, ab amet debitis. Atque repellat debitis vitae\r\n              dignissimos facere blanditiis ullam aliquid quasi itaque natus, rerum\r\n              possimus dolore voluptatum quia nisi reprehenderit velit perferendis\r\n              fuga a distinctio, modi asperiores iste rem. Suscipit exercitationem\r\n              provident at quae, quasi laudantium id veritatis quia obcaecati\r\n              laboriosam sint debitis doloremque ratione. Debitis autem, earum est\r\n              quod reiciendis dolore quas vitae facilis excepturi vero voluptas eius\r\n              officiis, nihil modi? Quidem dolorem non nihil consequatur sequi\r\n              quibusdam quaerat! Accusamus laudantium adipisci voluptas repellat in,\r\n              sit optio voluptatum minima accusantium, deleniti, illum atque nihil\r\n              quia. Earum officia sequi maxime reprehenderit mollitia ea placeat,\r\n              consequuntur nemo, laudantium assumenda illo dicta consequatur optio\r\n              quos dolore dolorem excepturi quae cupiditate ipsam quod impedit, eaque\r\n              labore ullam modi. Unde mollitia maxime aut possimus dicta velit,\r\n              quibusdam, temporibus incidunt exercitationem accusantium accusamus\r\n              quis molestias libero cupiditate quisquam labore excepturi eligendi\r\n              aspernatur perferendis ad, quaerat culpa! Quam suscipit quaerat\r\n              deleniti, dignissimos obcaecati, aliquam excepturi sequi quod aut, sed\r\n              iusto magni qui odio aperiam voluptate praesentium. Explicabo voluptate\r\n              quia eligendi autem nulla, molestiae molestias blanditiis dicta sunt\r\n              minima numquam. Labore illum reprehenderit nam repudiandae, distinctio\r\n              dicta velit ipsum veniam neque doloremque. Eaque corrupti ipsa\r\n              veritatis voluptas explicabo reiciendis, maiores quia sint, dolor\r\n              recusandae modi perferendis saepe odit fuga consequuntur ducimus natus\r\n              non itaque exercitationem inventore mollitia vero repudiandae illum\r\n              ipsum! Maxime atque quisquam modi quam similique voluptate molestiae\r\n              sed perferendis enim, eaque fugiat nostrum dignissimos alias dolorum\r\n              nulla tenetur temporibus eius esse consequuntur dolores tempore\r\n              voluptates, eos omnis numquam! Totam nobis nam praesentium\r\n              exercitationem nostrum enim quod fugit eaque accusamus laborum\r\n              inventore ea eius, sit blanditiis cumque explicabo soluta similique\r\n              placeat quidem est vero maxime! Impedit molestiae repellendus\r\n              voluptatem non amet facilis dicta inventore dolores voluptas? Est quae\r\n              ut itaque exercitationem. Quidem quia debitis a, harum repellat commodi\r\n              officia veritatis delectus, vitae nisi eveniet magnam dignissimos\r\n              obcaecati qui eum atque ducimus quis neque provident deleniti eligendi.\r\n              Eveniet dolore voluptates sequi adipisci autem doloremque nemo, vero\r\n              sed. Saepe quisquam, voluptatum delectus, eos dolorem, sed et error\r\n              quam quae maxime repudiandae ullam! Vitae blanditiis iure doloremque\r\n              non cupiditate vel saepe? Obcaecati, dicta consequuntur tenetur,\r\n              architecto consequatur voluptatum id, explicabo nesciunt nostrum\r\n              blanditiis ex corrupti ullam! Nihil, optio quas, possimus aliquam\r\n              voluptatum nostrum blanditiis reiciendis magni itaque praesentium sit\r\n              necessitatibus ex, obcaecati nemo? Temporibus, et dolores ipsa maiores\r\n              voluptas minus distinctio incidunt veritatis eum amet.\r\n            </p>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JumbleWord;\r\n","C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\components\\Header\\subcomponents\\SideMenu\\menuItems.js",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\components\\Header\\subcomponents\\SideMenu\\subcomponents\\ExpandedList\\ExpandedList.jsx",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\pages\\ErrorPage\\ErrorPage.jsx",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\components\\MainContent\\MainContent.js",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\logic\\arrayLogic.js",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\logic\\wordLogic.js",[],"C:\\Users\\SheKing\\Desktop\\englishtree\\react\\englishtree-react\\src\\pages\\TeacherPanel\\JumbleWord\\subcomponents\\CategorySelect\\CategorySelect.jsx",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":60,"column":10,"nodeType":"88","messageId":"89","endLine":60,"endColumn":19},{"ruleId":"86","severity":1,"message":"90","line":97,"column":9,"nodeType":"88","messageId":"89","endLine":97,"endColumn":26},{"ruleId":"86","severity":1,"message":"91","line":125,"column":9,"nodeType":"88","messageId":"89","endLine":125,"endColumn":22},{"ruleId":"86","severity":1,"message":"92","line":172,"column":9,"nodeType":"88","messageId":"89","endLine":172,"endColumn":27},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'excercise' is assigned a value but never used.","Identifier","unusedVar","'handleAddCategory' is assigned a value but never used.","'handleAddWord' is assigned a value but never used.","'handleAddExcercise' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]